@use "../breakpoints.scss" as breakpoints;

.aboutContainer {
  display: flex;
  width: 100%;
  min-height: 100vh;
  position: relative;
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
  gap: 2rem;
}

.sidebar {
  width: 30%;
  position: sticky;
  top: 2rem;
  height: fit-content;
  align-self: flex-start;
}

.avatarContainer {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 2rem;
  border-radius: var(--radius-l);
  background: var(--color-surface-raised);
  border: 1px solid var(--color-border-strong);
  box-shadow: var(--shadow-xl);
  margin-bottom: 2rem;
  position: relative;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, transparent, rgba(106, 106, 106, 0.05));
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    
    &::before {
      opacity: 1;
    }
  }
}

.navLinks {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}

.navLink {
  background: none;
  border: none;
  text-align: left;
  padding: 0.75rem 1rem;
  border-radius: var(--radius-s);
  color: var(--color-text-secondary);
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    height: 100%;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 0;
  }

  &::after {
    content: '';
    position: absolute;
    right: -10px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: 5px solid var(--color-primary);
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    transition: all 0.3s ease;
  }

  span {
    position: relative;
    z-index: 1;
    transition: all 0.3s ease;
  }

  &.navLink:hover, .navLink.active {
    background: var(--color-bg-subtle);
    color: var(--color-text-default);
  }

  &:hover {
    background: var(--color-bg-subtle);
    color: var(--color-text-primary);
    transform: translateX(8px);
    
    &::before {
      width: 4px;
    }
    
    &::after {
      right: 8px;
    }
    
    span {
      transform: translateX(4px);
    }
  }

  &:active {
    transform: translateX(8px) scale(0.98);
  }
}

.mainContent {
  flex: 1;
  max-width: 70%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.section {
  padding: 2rem;
  border-radius: var(--radius-l);
  background: var(--color-surface-raised);
  box-shadow: var(--shadow-s);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: left 0.5s ease;
  }

  &:hover {
    box-shadow: var(--shadow-m);
    transform: translateY(-4px);
    
    &::before {
      left: 0;
    }
  }
}

.sectionContent {
    line-height: 1.7;
    color: var(--color-text-secondary);
}

.editForm {
    background: var(--color-surface-subtle);
    padding: 1.5rem;
    border-radius: var(--radius-m);
    margin-top: 1rem;
}

.avatarWrapper {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  overflow: hidden;
  border: 2px solid var(--color-border-strong);
  display: flex;
  align-items: center;
  justify-content: center;
}

.languagesContainer {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: center;
}

.avatarWrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
  display: block;
}

.section {
  margin-bottom: 2rem;
  padding: 1.5rem;
  background: var(--color-surface);
  border-radius: var(--border-radius-m);
  box-shadow: var(--shadow-s);

  &:last-child {
    margin-bottom: 0;
  }
}

.sectionHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  gap: 1rem;
  position: relative;
  
  h1, h2, h3, h4, h5, h6 {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    
    &::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 2px;
      background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
      transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    &:hover {
      transform: translateX(4px);
      color: var(--color-primary);
      
      &::after {
        width: 100%;
      }
    }
  }
}

.sectionContent {
  line-height: 1.6;
}

.editForm {
  background: var(--color-surface-raised);
  padding: 1.5rem;
  border-radius: var(--border-radius-s);
  margin-top: 1rem;
  width: 100%;
}

.formFields {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.formField {
  width: 100%;
  
  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--color-text);
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    
    &:hover {
      color: var(--color-primary);
      transform: translateX(4px);
    }
    
    // Efecto de pulso sutil en el label
    &::before {
      content: '';
      position: absolute;
      left: -8px;
      top: 50%;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      background: var(--color-primary);
      border-radius: 50%;
      transition: all 0.3s ease;
    }
    
    &:hover::before {
      width: 6px;
      height: 6px;
    }
  }
  
  .required {
    color: var(--color-text-danger);
    margin-left: 0.25rem;
  }
  
  .formInput {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-s);
    font-size: 1rem;
    font-family: inherit;
    background-color: var(--color-background);
    color: var(--color-text);
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    
    // Efecto de l√≠nea animada en el borde inferior
    &::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 2px;
      background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
      transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      z-index: 1;
    }
    
    // Efecto de resplandor sutil
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, transparent, rgba(106, 106, 106, 0.05));
      opacity: 0;
      transition: opacity 0.3s ease;
      pointer-events: none;
    }
    
    &:hover {
      border-color: var(--color-primary);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      
      &::before {
        width: 100%;
      }
      
      &::after {
        opacity: 1;
      }
    }
    
    &:focus {
      outline: none;
      border-color: var(--color-primary);
      box-shadow: 0 0 0 3px rgba(106, 106, 106, 0.2), 0 4px 16px rgba(0, 0, 0, 0.2);
      transform: translateY(-2px);
      
      &::before {
        width: 100%;
        background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
        box-shadow: 0 0 8px rgba(106, 106, 106, 0.4);
      }
      
      &::after {
        opacity: 1;
        background: linear-gradient(135deg, transparent, rgba(106, 106, 106, 0.1));
      }
    }
    
    &::placeholder {
      color: var(--color-text-weak);
      transition: color 0.3s ease;
    }
    
    &:hover::placeholder {
      color: var(--color-text);
    }
  }
  
  textarea.formInput {
    min-height: 120px;
    resize: vertical;
    line-height: 1.6;
    
    &:hover {
      transform: translateY(-1px) scale(1.01);
    }
    
    &:focus {
      transform: translateY(-2px) scale(1.02);
    }
  }
}

.formActions {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--color-border);
  
  .buttonsContainer {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    
    .cancelButton {
      background-color: transparent;
      color: var(--color-text);
      border: 1px solid var(--color-border);
      position: relative;
      overflow: hidden;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(106, 106, 106, 0.1), transparent);
        transition: left 0.5s ease;
      }
      
      &:hover {
        background-color: var(--color-surface-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        
        &::before {
          left: 100%;
        }
      }
      
      &:active {
        transform: translateY(0);
      }
    }
    
    .submitButton {
      background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
      color: white;
      border: none;
      position: relative;
      overflow: hidden;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s ease;
      }
      
      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(106, 106, 106, 0.3);
        background: linear-gradient(135deg, var(--color-primary-hover), var(--color-accent-hover));
        
        &::before {
          left: 100%;
        }
      }
      
      &:active {
        transform: translateY(0);
      }
      
      &:disabled {
        background: var(--color-primary-weak);
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
        
        &::before {
          display: none;
        }
      }
    }
  }
}



.fileUploadButton {
  display: inline-block;
  cursor: pointer;
  margin-bottom: 1rem;
}

.hiddenFileInput {
  display: none;
}

.languagesContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
  margin: 1rem 0;
}

.editButton {
  margin-top: 1.5rem;
  width: 100%;
}

/* Estilos para el modal personalizado */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background: var(--color-surface-default);
  border-radius: var(--radius-l);
  padding: 2rem;
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: var(--shadow-l);
}

.modalTitle {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 1.5rem;
  color: var(--color-text-default);
  position: relative;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  animation: slideInFromTop 0.5s ease-out;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -10px;
    width: 4px;
    height: 100%;
    background: linear-gradient(180deg, var(--color-primary), var(--color-accent));
    border-radius: 2px;
    transform: scaleY(0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  &:hover {
    transform: translateX(8px);
    color: var(--color-primary);
    
    &::before {
      transform: scaleY(1);
    }
  }
}

.modalForm {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formLabel {
  font-weight: 500;
  color: var(--color-text-default);
}

.textarea {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--color-border-default);
  border-radius: var(--radius-s);
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.5;
  resize: vertical;
  min-height: 150px;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;

  &:focus {
    outline: none;
    border-color: var(--color-accent-default);
    box-shadow: 0 0 0 2px var(--color-accent-subtle);
  }

  &:disabled {
    background-color: var(--color-bg-subtle);
    cursor: not-allowed;
  }
}

.modalActions {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  margin-top: 1rem;
}

.button {
  padding: 0.5rem 1rem;
  border-radius: var(--radius-s);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

.buttonPrimary {
  background-color: var(--color-accent-default);
  color: var(--color-text-on-accent);

  &:hover:not(:disabled) {
    background-color: var(--color-accent-hover);
  }
}

.buttonSecondary {
  background-color: var(--color-bg-subtle);
  color: var(--color-text-default);
  border-color: var(--color-border-default);

  &:hover:not(:disabled) {
    background-color: var(--color-bg-subtle-hover);
  }
}

// Estilos para la galer√≠a de im√°genes
.imageGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 1rem;
  max-height: 300px;
  overflow-y: auto;
  padding: 1rem;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-s);
  background: var(--color-surface-subtle);
}

.imageItem {
  position: relative;
  border-radius: var(--radius-s);
  overflow: hidden;
  border: 2px solid transparent;
  transition: all 0.2s ease;
  cursor: pointer;

  &:hover {
    border-color: var(--color-accent-default);
    transform: scale(1.05);
  }

  &.selected {
    border-color: var(--color-accent-default);
    box-shadow: 0 0 0 2px var(--color-accent-subtle);
  }

  &.current {
    border-color: var(--color-success-default);
  }
}

.galleryImage {
  width: 100%;
  height: 100px;
  object-fit: cover;
  border-radius: var(--radius-s);
  cursor: pointer;
}

.imageActions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0.5rem;
  background: rgba(0, 0, 0, 0.8);
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0;
  transition: opacity 0.2s ease;

  .imageItem:hover & {
    opacity: 1;
  }
}

.currentBadge {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: var(--color-success-default);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-xs);
  font-size: 0.75rem;
  font-weight: 500;
}

@media (max-width: breakpoints.$s) {
  .aboutContainer {
    flex-direction: column;
    padding: 1rem;
    gap: 2rem;
    }

    .avatarContainer {
        position: relative;
        top: 0;
        width: 100%;
        padding: 1.5rem;
        margin-bottom: 1rem;
    }

    .contentContainer {
        padding-right: 0;
    }

    .section {
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .textAlign {
        text-align: center;
    }

    .blockAlign {
        align-self: center;
    }
}

// Animaciones keyframes
@keyframes slideInFromTop {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  0% {
    opacity: 0;
    transform: translateX(20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

// Aplicar animaciones a elementos espec√≠ficos
.section {
  animation: fadeInUp 0.6s ease-out;
}

.formField {
  animation: slideInFromLeft 0.5s ease-out;
  
  &:nth-child(even) {
    animation: slideInFromRight 0.5s ease-out;
  }
}

.modalContent {
  animation: slideInFromTop 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

// Efecto de carga para los inputs
.formInput:focus {
  animation: pulse 0.3s ease-in-out;
}

// Efecto de shimmer para botones
.submitButton {
  background-size: 200px 100%;
  background-image: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  
  &:hover {
    animation: shimmer 1.5s infinite;
  }
}

// Estilos para las secciones de experiencia, estudios y habilidades
.sectionText {
  color: var(--color-text-secondary);
  font-style: italic;
  line-height: 1.6;
  animation: fadeInUp 0.6s ease-out;
}

// Estilos para experiencia laboral
.experienceContainer {
  animation: fadeInUp 0.6s ease-out;
}

.experienceList {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.experienceItem {
  padding: 1.5rem;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-m);
  background: var(--color-surface-subtle);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: left 0.5s ease;
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: var(--color-primary);
    
    &::before {
      left: 0;
    }
  }
}

.experienceContent {
  position: relative;
  z-index: 1;
}

.experienceHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 0.5rem;
  gap: 1rem;
}

.experienceTitle {
  color: var(--color-text-primary);
  margin: 0;
  transition: color 0.3s ease;
}

.companyName {
  color: var(--color-text-secondary);
  margin: 0.25rem 0;
  font-weight: 500;
}

.dateRange {
  color: var(--color-text-weak);
  margin: 0.25rem 0;
  font-size: 0.875rem;
}

.experienceDescription {
  color: var(--color-text);
  margin: 1rem 0 0 0;
  line-height: 1.6;
}

.technologiesContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1rem;
}

.technologyTag {
  padding: 0.25rem 0.75rem;
  background: var(--color-primary-weak);
  color: var(--color-primary);
  border-radius: var(--radius-s);
  font-size: 0.75rem;
  font-weight: 500;
  transition: all 0.3s ease;
  
  &:hover {
    background: var(--color-primary);
    color: white;
    transform: scale(1.05);
  }
}

// Estilos para estudios
.studiesContainer {
  animation: fadeInUp 0.6s ease-out;
}

.studiesList {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.studyItem {
  padding: 1.5rem;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-m);
  background: var(--color-surface-subtle);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: left 0.5s ease;
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: var(--color-primary);
    
    &::before {
      left: 0;
    }
  }
}

.studyContent {
  position: relative;
  z-index: 1;
}

.studyHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 0.5rem;
  gap: 1rem;
}

.studyTitle {
  color: var(--color-text-primary);
  margin: 0;
  transition: color 0.3s ease;
}

.institutionName {
  color: var(--color-text-secondary);
  margin: 0.25rem 0;
  font-weight: 500;
}

.studyDescription {
  color: var(--color-text);
  margin: 1rem 0 0 0;
  line-height: 1.6;
}

// Estilos para habilidades t√©cnicas
.skillsContainer {
  animation: fadeInUp 0.6s ease-out;
}

.skillsList {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.skillCategory {
  animation: slideInFromLeft 0.5s ease-out;
}

.categoryTitle {
  color: var(--color-text-primary);
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 2px solid var(--color-border);
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: width 0.3s ease;
  }
  
  &:hover::after {
    width: 100%;
  }
}

.skillsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1rem;
}

.skillItem {
  padding: 1.25rem;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-m);
  background: var(--color-surface-subtle);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    transition: left 0.5s ease;
  }

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: var(--color-primary);
    
    &::before {
      left: 0;
    }
  }
}

.skillContent {
  position: relative;
  z-index: 1;
}

.skillHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
  gap: 1rem;
}

.skillName {
  color: var(--color-text-primary);
  margin: 0;
  transition: color 0.3s ease;
}

.skillLevelContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.skillLevelBar {
  width: 100%;
  height: 6px;
  background: var(--color-border);
  border-radius: 3px;
  overflow: hidden;
  position: relative;
}

.skillLevelFill {
  height: 100%;
  border-radius: 3px;
  transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: shimmer 2s infinite;
  }
  
  &.beginner {
    width: 25%;
    background: linear-gradient(90deg, #ef4444, #f87171);
  }
  
  &.intermediate {
    width: 50%;
    background: linear-gradient(90deg, #f59e0b, #fbbf24);
  }
  
  &.advanced {
    width: 75%;
    background: linear-gradient(90deg, #3b82f6, #60a5fa);
  }
  
  &.expert {
    width: 100%;
    background: linear-gradient(90deg, #10b981, #34d399);
  }
}

.skillLevelLabel {
  color: var(--color-text-weak);
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

// Bot√≥n de editar com√∫n
.editButton {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover {
    transform: scale(1.05);
  }
}